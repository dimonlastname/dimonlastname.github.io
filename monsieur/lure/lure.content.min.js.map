{"version":3,"sources":["lure.content.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Lure","Plugin","Content","Control","Controller","Templator","TreeBuilder","MonsieurContent","_ref","MakeContent","Array","isArray","Data","this","CreateElementFromString","replace","match","group","x","matche","Target","appendChild","construct","Type","Name","AllContents","ContentList","Refresh","bind","Select","s","$this","SelectAll","GetParent","stringName","arguments","undefined","content","Parent","GetContent","parent","found","searcher","isContent","GetIndex","HTMLElement","slice","call","parentElement","children","indexOf","AddEventListener","eventName","selector","func","AddEventListenerGlobal","AddTutor","buttonTutorStarter","MonsieurTutor","_SortBy","f","data","console","log","sort","a","b","_Sorting","Sorted","kf","hasOwnProperty","classList","remove","add","_FilterBy","p","performance","now","filters","_d","_Filter","_DataDefault","_loop","Filter","filter","toString","toLowerCase","_sorter","_Data","PageSize","_PageSize","_PageCursor","_Rebuilder","mr","PerformanceNow","Props","k","GetSet","getOwnPropertyDescriptor","Methods","Show","e","isActive","Active","style","window","getComputedStyle","duration","eval","transitionDuration","durationAni","animationDuration","isVisible","forEach","item","Hide","Dialog","_DialogCount","DialogWrapper","document","body","onclick","zIndexWrapper","parseInt","zIndex","zIndexContent","Number","isNaN","DialogBlur","background","DialogAnimation","BeforeShow","Shower","display","clearTimeout","__private","ToggleTimer","setTimeout","Disactive","Hider","Toggle","MonsieurControl","OnClick","SubContent","cname","TitleContent","Title","Visible","isController","isHasEditable","_EditablesEventListenerRun","Sorting","_loop2","addEventListener","info","Filtering","_loop3","innerHTML","querySelector","value","push","from","contains","AfterBuild","_ref$Target","_ref$Content","_ref$CSS","CSS","_ref$Name","_ref$Global","Global","_ref$Title","_ref$Type","_ref$Visible","_ref$SubContent","_ref$Dialog","_ref$DialogWrapper","_ref$DialogBlur","_ref$DialogAnimation","_ref$Show","_ref$Hide","_ref$Shower","_ref$Hider","_ref$BeforeShow","_ref$Refresh","_ref$Sorting","_ref$Filtering","_ref$OnClick","_ref$Controller","_ref$Control","_ref$Props","_ref$Methods","_ref$GetSet","_ref$AfterBuild","_ref$Disabled","Disabled","_ref$Parent","GetFileText","then","node","createElement","RefreshOne","removeData","Remove","itemData","extraclass","isPrepend","addData","Add","index","Edit","get","set","t","Items","control","owner","_this","controls","_loop4","Math","random","substr","_Content","isGlobal","OnChange","currentTarget","onchange","type","_ref2","_ref2$Target","_ref2$Data","_ref2$ListElement","ListElement","_ref2$EmptyMessage","EmptyMessage","_ref2$EmptyHide","EmptyHide","_ref2$PageSize","_ref2$DataCount","DataCount","_ref2$PageGet","PageGet","_ref2$ShowAllButton","ShowAllButton","_ref2$LineSave","LineSave","line","property","newValue","callback","_ref2$LineAdd","LineAdd","dataObject","_ref2$EditModeSwitch","EditModeSwitch","_ref2$NoAnimation","DataSaveAll","NoAnimation","_ref2$NoBuild","NoBuild","_ref2$BeforeBuild","BeforeBuild","_ref2$AfterBuild","_ref2$AfterAdd","AfterAdd","_ref2$Parent","_DataCount","_PageGet","isShowAllButton","isNoAnimaton","isEmptyHide","Dictionary","_Dictionary","Refresher","j","fields","isAttribute","NewValue","BuildValue","obj","attributes","split","lines","querySelectorAll","NextCount","Limit","paginator","tag","empty","_LineBuilder","CreateElementsFromString","tagName","also","showAll","isTable","colspan","btnNext","BuildWithIt","Build","btnNextAll","FieldAdd","element","elemAttributes","WhatFields","name","Compile","childNodes","PageCursor","newItem","itemOld","parentNode","replaceChild","fragment","createDocumentFragment","elem","dataset","unshift","prepend","splice","SwitchToEditMode","Editable","EditMode","AddEdits","isListElementCssSelector","outerHTML","list_element","list_elementClassed","pos","checked","click","MonsieurController","AllChildren","TemplatorList","_ref3","_ref3$Target","_ref3$Data","_ref3$ListElement","_ref3$Drop","Drop","_ref3$SubSelector","SubSelector","_ref3$SubSelectorHand","SubSelectorHandler","_ref3$BeforeBuild","_ref3$AfterBuild","_ref3$Parent","SubTreeClass","Lvl","Branch","html","entag","LineBuilder","Index","BuildElement","indexJ","extra","$lvl","$key","$index","$j","ObjItem","sub","TargetButton","TargetContent","MT","ContentBG","_Description","_Step","_ButtonNext","_ButtonStop","ButtonNextText","TutorPosition","temp","ColorTransparent","backgroundColor","ElemCssRestore","Element","position","outline","nElements","ElemCssSet","Run","Confirm","desc","GoStep","Stop","ElementDesc","ElemParent","closest","opacity","posX","offsetLeft","clientWidth","posY","offsetTop","clientHeight","innerWidth","documentElement","scrollTop","innerHeight","offsetHeight","left","top","MonsieurLoading","_ref4","_ref4$Target","cx","cy","_DoArc","radius","maxAngle","d","angle","rad","PI","cos","y","sin","svg","Timeout","TimeoutHide","MonsieurTooltip","_ref5","_ref5$Target","_ref5$Attribute","Attribute","_ref5$Delay","Delay","_ref5$Time","Time","_ref5$Custom","Cursor","Custom","_ref5$AfterBuild","ToolTip","Timer","Destr","text"],"mappings":"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","file":"lure.content.min.js","sourcesContent":["//sets = {\r\n//  SubContent: [\r\n//      {sets},                             -same object to create subs\r\n// ],\r\n//\r\n// Controller:{                                   - if needs some Template master\r\n//    Type: Templator,                                    - class link [optional] Templator by default\r\n//    Target: {string|HTMLElement}                        -[optional] if Controller.Target is undefined, Controller.Target = sets.Target\r\n//    Data: {array|object},                               - data array [optional] Data === [] by default\r\n//    ListElement: {string|HTMLElement},                  - repeated element\r\n//    EmptyMessage: \"no items\",                           - render if Data.length === 0;\r\n\r\n//  Control: {\r\n//    Target: {string, jQuery, HTMLElement},\r\n//    Global: {bool}                               - set global event listener. Set true if control renders after init or it renders dynamicly\r\n//    OnClick: {function}                          - here this === current MonsieurContent\r\n//    OnChange: {function}                         - here this === current MonsieurContent\r\n// },}\r\n\r\nLure.Plugin.Content = {};\r\nLure.Plugin.Content.Control = '';\r\nLure.Plugin.Content.Controller = {};\r\nLure.Plugin.Content.Controller.Templator = '';\r\nLure.Plugin.Content.Controller.TreeBuilder = '';\r\n\r\nLure.Content = class MonsieurContent {\r\n    constructor({                       //--MonsieurContent Settings--\r\n                    Target     = null,              //{string, HTMLElement} - where to render       [by default this.Parent.Content];\r\n                    Content    = null,              //{string}  - html content string, if           [by default this.Target.innerHTML]\r\n                    CSS        = '',                //{string}  - css classes string\r\n                    Name       = null,              //{string}  - MonsieurContent's name. Need for search content by .GetContent(contentName)\r\n                    Global     = false,             //{bool}    - actual for SubContent. Set true, if SubContent is outside of Parent\r\n                    Title      = \"\",                //{string}  -  header element, contains name/caption/title of content\r\n                    Type       = \"Untyped\",         //{string}  - if has - this.Content will be invisible by default, if need be visible set next property:\r\n                    Visible    = undefined,         //{bool}    - make visible by default (if has no Type - visible by default)\r\n                    SubContent = [],                //{Array} of MonsieurContent Settings\r\n                    Dialog     = false,             //{bool} - make dialog absolute window with dialog wrapper\r\n                    DialogWrapper = true,           //{bool} - show dialog  wrapper bg\r\n                    DialogBlur = null,              //{string, jQuery, HTMLElement} target background for blur when dialog\r\n                    DialogAnimation = null,         //{string} - css animation name\r\n                    Show       = null,              //{function} - show action\r\n                    Hide       = null,              //{function} - hide action\r\n                    Shower     = function(){this.Content.style.display = '';},       //custom show handler [calls before .Show]\r\n                    Hider      = function(){this.Content.style.display = 'none';},   //custom hide handler [calls before .Hide]\r\n                    BeforeShow = function(){},      //{function} - calls before .Shower and .Show\r\n                    Refresh    = function(data, i){\r\n                        if (this.Controller)\r\n                            this.Controller.Refresh(data, i)\r\n                    },                              //{function} - refresh content, may be call on page resize for example\r\n                    Sorting    = false,             //{object}   - sort controls by field like 'field' -> '{css|HTMLElement}'  ex.: { count: '.head .count'}\r\n                    Filtering  = false,             //{object}   - like sorting, but fast filter textbox would be\r\n                    OnClick    = null,              //{function} - this.Content.onclick event\r\n                    Controller = null,              //{object} contoller settings(Templator or TreeBuilder)\r\n                    Control    = null,              //{object} (help upper)\r\n\r\n\r\n                    Props      = function(){},      //{function}  - recomented for extra fields  for MonsieurContent (this.Extrafield =...)\r\n                    Methods    = function(){},      //{function}  - recomented for extra methods for MonsieurContent (this.ExtraMethod = function(){...} )\r\n                    GetSet     = {},                //{function}  - recomenter for extra getters and setters for MonsieurContent\r\n                    AfterBuild = function(){},      //{function} - calls after MonsieurContent init\r\n                    Disabled   = false,             //debugging,\r\n                    Parent     = null               //link to parent MonsieurContent of SubContent\r\n                })\r\n\r\n    {\r\n        if (Disabled)\r\n            return;\r\n        let $this = this;\r\n        this.isContent = true;\r\n        this.isActive = true;\r\n        if (Name  === 'Tooltipchek')\r\n            ;//debugger;\r\n\r\n        this.Parent = Parent;\r\n        if (Parent !== null){\r\n            this.Target = Global? Lure.Select(Target) : Lure.Select(Target, this.Parent.Content);\r\n            if (this.Target === null)\r\n                this.Target = this.Parent.Content;\r\n        }\r\n        else if (Target !== null){\r\n            this.Target = Lure.Select(Target);\r\n        }\r\n        // debugger;\r\n        ////\r\n        if (Content === null){\r\n            this.Content = this.Target;\r\n            construct.call($this);\r\n        }else{\r\n            if (Content.match(/<[^>]+>/) === null) {//if not dom string\r\n                console.log('get load');\r\n                Lure.GetFileText(Content).then(x => {\r\n                    // debugger;\r\n                    //     console.log('x', x);\r\n                    MakeContent.call($this, x);\r\n                    construct.call($this);\r\n                });\r\n            }else {\r\n                MakeContent.call($this, Content);\r\n                construct.call($this);\r\n            }\r\n\r\n\r\n        }\r\n        function MakeContent(Content){\r\n            if (Controller === null || Array.isArray(Controller.Data))\r\n            {\r\n                this.Content = Lure.CreateElementFromString(Content);\r\n            }\r\n            else if (Controller !== null && !Array.isArray(Controller.Data))\r\n            {\r\n                /*Content = Content.replace(/<[^>]+>([^<]*{{([^#}]+)}}[^<]*)<[^>]+>/g, function (match, group) {\r\n                 let newGroup = group.replace(/{{[^#}]+}}/g, function (match) {\r\n                 return match.replace(match, `<span>${match}</span>`);\r\n                 });\r\n                 return  match.replace(group, newGroup);\r\n                 });*/\r\n                Content = Content.replace(/>[^>]*({{[^#}]+}})[^>]*</g, function (match, group) {\r\n                    /*let newGroup = group.replace(/{{[^#}]+}}/g, function (match) {\r\n                     return match.replace(match, `<span>${match}</span>`);\r\n                     });*/\r\n                    const x = match.replace(/{{[^#}]+}}/g, function (matche) {\r\n                        return `<span>${matche}</span>`\r\n                    });\r\n                    return x;// match.replace(group, `<span>${group}</span>`);\r\n                });\r\n                this.Content = Lure.CreateElementFromString(Content);\r\n            }\r\n            //this._Content = Content;\r\n            this.Target.appendChild(this.Content);\r\n        }\r\n\r\n        /////\r\n        if (this.Content === null || this.Target === null)\r\n        {\r\n            this.isContent = false;\r\n            return;\r\n        }\r\n\r\n\r\n\r\n\r\n        //### CONSTRUCTION\r\n        if (CSS !== ''){\r\n            let node = document.createElement('style');\r\n            node.innerHTML = CSS;\r\n            document.body.appendChild(node);\r\n        }\r\n        function construct(){\r\n            this.Type = Type;\r\n            this.Name = Name;\r\n            this.AllContents = Lure.ContentList;\r\n\r\n\r\n            //### METHODS\r\n            /**\r\n             * @param {object} Data\r\n             * @param {int} index\r\n             */\r\n            this.Refresh = Refresh.bind(this);\r\n            /**\r\n             *\r\n             * @param {selector|HTMLElement} s\r\n             * @returns {HTMLElement}\r\n             * @constructor\r\n             */\r\n            this.Select = function(s){\r\n                return Lure.Select(s, $this.Content)\r\n            };\r\n            /**\r\n             *\r\n             * @param {selector|HTMLElement} s\r\n             * @returns {NodeList}\r\n             * @constructor\r\n             */\r\n            this.SelectAll = function(s){\r\n                return Lure.SelectAll(s, $this.Content)\r\n            };\r\n            /**\r\n             *\r\n             * @param {string}stringName\r\n             * @constructor\r\n             * @returns {MonsieurContent}\r\n             */\r\n            this.GetParent = function(stringName='root'){\r\n                let content = $this;\r\n                while (content.Parent !== null && content.Name !== stringName)\r\n                    content = content.Parent;\r\n                return content;\r\n            };\r\n            /**\r\n             *\r\n             * @param {string}stringName\r\n             * @constructor\r\n             * @returns {MonsieurContent}\r\n             */\r\n            this.GetContent = function (stringName='root') {\r\n                let parent = this.GetParent(stringName);\r\n                if (parent.Name === stringName)\r\n                    return parent;\r\n                // let root = parent;\r\n                let found = parent;\r\n                if (stringName === 'root')\r\n                    return found;\r\n                let searcher0 = function (content) {\r\n                    if (content.isContent && content.__private.ContentNames)\r\n\r\n                        for( let i = 0; i < content.__private.ContentNames.length; i++){\r\n                            let name = content.__private.ContentNames[i];\r\n                            if (name === stringName)\r\n                                return content[name];\r\n                            found = searcher(content[name])\r\n                        }\r\n                    return found;\r\n                };\r\n                let searcher = function (content) {\r\n                    // debugger;\r\n                    for(let key in content){\r\n                        if (key !== \"Parent\" && !!content[key] && content[key].isContent){\r\n\r\n                            if (content[key].Name === stringName)\r\n                                return content[key];\r\n                            found = searcher(content[key]);\r\n                        }\r\n\r\n                    }\r\n                    return found;\r\n                };\r\n                return searcher(found);\r\n\r\n            };\r\n            /**\r\n             *\r\n             * @param {HTMLElement|string} HTMLElement\r\n             * @returns {number|Number}\r\n             * @constructor\r\n             */\r\n            this.GetIndex = function (HTMLElement) {\r\n                HTMLElement = $this.Select(HTMLElement);\r\n                return Array.prototype.slice.call( HTMLElement.parentElement.children ).indexOf(HTMLElement);\r\n            };\r\n            /**\r\n             *\r\n             * @param {string} eventName\r\n             * @param {string} selector\r\n             * @param {function} func\r\n             * @constructor\r\n             */\r\n            this.AddEventListener = function (eventName, selector, func) {\r\n                Lure.AddEventListenerGlobal(eventName,selector,func, $this.Content, $this);\r\n            };\r\n            /**\r\n             *\r\n             * @param {string|HTMLElement} buttonTutorStarter\r\n             * @constructor\r\n             */\r\n            this.AddTutor = function (buttonTutorStarter) {\r\n                $this.MonsieurTutor = new MonsieurTutor($this.Select(buttonTutorStarter), $this.Content);\r\n            };\r\n            //private\r\n            this._SortBy = function(f, data, isSorted = false){\r\n                if (data.length < 2)\r\n                    return;\r\n                console.log('sort by', f);\r\n                data.sort(function (a, b) {\r\n                    if      ((a[f] < b[f]) && $this._Sorting[f].Sorted)\r\n                        return 1;\r\n                    else if ((a[f] > b[f]) && $this._Sorting[f].Sorted)\r\n                        return -1;\r\n                    else if ((a[f] < b[f]) && !$this._Sorting[f].Sorted)\r\n                        return -1;\r\n                    else if ((a[f] > b[f]) && !$this._Sorting[f].Sorted)\r\n                        return 1;\r\n                    return 0;\r\n                });\r\n                $this._Sorting[f].Sorted = !$this._Sorting[f].Sorted;\r\n                for (let kf in $this._Sorting){\r\n                    if ($this._Sorting.hasOwnProperty(kf) && kf !== '_sorter'){\r\n                        $this._Sorting[kf].Target.classList.remove('mt-sorting-up');\r\n                        $this._Sorting[kf].Target.classList.remove('mt-sorting-down');\r\n                        if (f !==kf)\r\n                            $this._Sorting[kf].Sorted = false;\r\n                    }\r\n                }\r\n                $this._Sorting[f].Target.classList.add($this._Sorting[f].Sorted ? 'mt-sorting-down':'mt-sorting-up');\r\n                $this.Refresh();\r\n            };\r\n            this._FilterBy = function () {\r\n                let p = performance.now();\r\n                let filters = 0;\r\n                let _d = $this._Filter._DataDefault.slice(0);\r\n                for (let f in $this._Filter){\r\n                    if ($this._Filter.hasOwnProperty(f) && $this._Filter[f].Filter && $this._Filter[f].Filter !==''){\r\n                        _d = _d.filter(x=>x[f].toString().toLowerCase().indexOf($this._Filter[f].Filter) > -1);\r\n                        filters++;\r\n                    }\r\n                }\r\n                console.log(_d);\r\n                if (filters === 0)\r\n                {\r\n                    if ($this._Sorting._sorter){\r\n                        $this._Sorting[$this._Sorting._sorter].Sorted = !$this._Sorting[$this._Sorting._sorter].Sorted;\r\n                        $this._SortBy($this._Sorting._sorter, $this.Controller._Data);\r\n                    }\r\n                    $this.Controller.Refresh();\r\n                }\r\n                else\r\n                {\r\n                    if ($this._Sorting._sorter){\r\n                        $this._Sorting[$this._Sorting._sorter].Sorted = !$this._Sorting[$this._Sorting._sorter].Sorted;\r\n                        $this._SortBy($this._Sorting._sorter, _d);\r\n                    }\r\n                    $this.Controller.PageSize = $this._PageSize;\r\n                    $this.Controller._PageCursor = 0;\r\n                    $this.Controller._Rebuilder(_d);\r\n\r\n                }\r\n\r\n                mr.PerformanceNow(p, 'FilterBy')\r\n            };\r\n\r\n            //extra properties\r\n            Props.call(this);\r\n            //extra getters/setters\r\n            for(let k in GetSet){\r\n                Object.defineProperty($this, k, Object.getOwnPropertyDescriptor(GetSet, k));\r\n            }\r\n            //extra methods\r\n            Methods.call(this);\r\n            //--\r\n            this.Show = function(e) {\r\n                this.isActive = true;\r\n                if (this.Control)\r\n                    this.Control.Active();\r\n                let style = window.getComputedStyle($this.Content);\r\n                let duration = eval(style.transitionDuration.replace('ms', '*1').replace('s', '*1000'));\r\n                let durationAni = eval(style.animationDuration.replace('ms', '*1').replace('s', '*1000'));\r\n                if (duration < durationAni)\r\n                    duration = durationAni;\r\n                duration++;\r\n                if ($this.Type !== \"Untyped\" && !$this.isVisible)\r\n                {\r\n                    Lure.ContentList[$this.Type].forEach((item) =>\r\n                    {\r\n                        if ((item) !== $this && item.isActive)\r\n                            item.Hide();\r\n                    });\r\n                }\r\n                if (Dialog){\r\n                    Lure._DialogCount++;\r\n                    $this.Content.classList.add('monsieur-dialog');\r\n                    //    console.log('DialogWrapper', DialogWrapper);\r\n                    if (DialogWrapper){\r\n                        $this.DialogWrapper = Lure.CreateElementFromString('<div class=\"dialog-wrapper\">');\r\n                        document.body.appendChild($this.DialogWrapper);\r\n                        $this.DialogWrapper.onclick = $this.Hide.bind($this);\r\n\r\n                        let zIndexWrapper = parseInt(window.getComputedStyle($this.DialogWrapper).zIndex);\r\n                        let zIndexContent = parseInt(window.getComputedStyle($this.Content).zIndex);\r\n                        if (Number.isNaN(zIndexContent) || zIndexContent < zIndexWrapper)\r\n                            $this.Content.style.zIndex = zIndexWrapper+1;\r\n                    }\r\n\r\n                    if (DialogBlur)\r\n                    {\r\n                        $this.DialogWrapper.style.background = 'none';\r\n                        Lure.Select(DialogBlur).classList.add('monsieur-blur');\r\n                    }\r\n                    if (DialogAnimation){\r\n                        $this.Content.classList.add(DialogAnimation);\r\n                    }\r\n                }\r\n                BeforeShow.call($this, e);\r\n                Shower.call($this, e);\r\n                $this.Content.style.display = '';\r\n                clearTimeout($this.__private.ToggleTimer);\r\n                //this.Content.addEventListener('transitionend', Show.bind($this, e));\r\n                if (Show !== null) {\r\n                    $this.__private.ToggleTimer = setTimeout(function() {\r\n                        Show.call($this, e);\r\n                    },duration);\r\n                }\r\n            };\r\n            this.Hide = function(e) {\r\n                this.isActive = false;\r\n                if (this.Control)\r\n                    this.Control.Disactive();\r\n                let style = window.getComputedStyle($this.Content);\r\n                let duration = eval(style.transitionDuration.replace('ms', '*1').replace('s', '*1000'));\r\n                let durationAni = eval(style.animationDuration.replace('ms', '*1').replace('s', '*1000'));\r\n                if (duration < durationAni)\r\n                    duration = durationAni;\r\n                duration++;\r\n                if (Dialog)\r\n                {\r\n                    Lure._DialogCount--;\r\n                    if ($this.DialogWrapper)\r\n                        $this.DialogWrapper.remove();\r\n                    if (DialogBlur  && Lure._DialogCount < 1)\r\n                        Lure.Select(DialogBlur).classList.remove('monsieur-blur');\r\n                }\r\n\r\n                Hider.call($this, e);\r\n                clearTimeout($this.__private.ToggleTimer);\r\n                if (Hide !== null)\r\n                    $this.__private.ToggleTimer = setTimeout(function () {\r\n                        Hide.call($this, e);\r\n                    }, duration);\r\n\r\n            };\r\n            this.Toggle = function(e){\r\n                if ($this.isVisible)\r\n                    $this.Hide(e);\r\n                else\r\n                    $this.Show(e);\r\n            };\r\n\r\n            this.__private = {};\r\n            this.__private.ToggleTimer = null;\r\n            this.Control = new MonsieurControl(Control, $this);\r\n            this.Content.onclick = OnClick? OnClick.bind($this) : null;\r\n            //SubContent\r\n            if (Array.isArray(SubContent)){\r\n                for (let i = 0; i < SubContent.length; i++){\r\n                    {\r\n                        if (!SubContent[i].Parent)\r\n                            SubContent[i].Parent = $this;\r\n                        //  $this.__private.ContentNames.push(SubContent[i].Name);\r\n                        $this[SubContent[i].Name] = new MonsieurContent( SubContent[i] );\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let cname in SubContent){\r\n                    SubContent[cname].Parent = $this;\r\n                    SubContent[cname].Name = cname;\r\n                    //       $this.__private.ContentNames.push(cname);\r\n                    $this[cname] = new MonsieurContent(SubContent[cname]);\r\n                }\r\n            }\r\n            //title\r\n            this.TitleContent = Lure.Select(Title, this.Content);\r\n\r\n            if ( (Type === \"Untyped\" && Visible !== false) && !Dialog)\r\n                Visible = true;\r\n            else if ( (Type !== \"Untyped\" && Visible !== true) || ( Dialog && Visible !== true) )\r\n                Visible = false;\r\n            //if (Typed) Content is Visible\r\n            if (Visible){\r\n                this.Content.style.display = '';\r\n                if (this.Control)\r\n                    this.Control.Active();\r\n            }\r\n            else { //not undefined\r\n                this.isActive = false;\r\n                this.Content.style.display = 'none';\r\n            }\r\n            if (Controller){\r\n                if (Controller.isController){\r\n                    this.Controller = Controller;\r\n                    this.Controller.Parent = this;\r\n                }\r\n                else{\r\n                    if (!Controller.Target)\r\n                        Controller.Target = this.Content;\r\n                    if (!Controller.Type)\r\n                        Controller.Type = Templator;\r\n                    Controller.Parent = this;\r\n                    this.Controller = new Controller.Type(Controller);\r\n                }\r\n                if (this.Controller.isHasEditable)\r\n                {\r\n                    Lure._EditablesEventListenerRun($this.Content);\r\n                }\r\n            }\r\n\r\n            if (Sorting){\r\n                $this._Sorting = {};\r\n                $this._Sorting._sorter = null;\r\n                for (let f in Sorting){\r\n                    if (Sorting.hasOwnProperty(f) && f !== '_sorter'){\r\n                        $this._Sorting[f] = {\r\n                            Target: $this.Select(Sorting[f]),\r\n                            Sorted: false,\r\n                        };\r\n                        $this._Sorting[f].Target.classList.add('mt-sorting');\r\n                        $this._Sorting[f].Target.addEventListener('click', function () {\r\n                            $this._Sorting._sorter = f;\r\n                            $this._SortBy(f, $this.Controller._Data);\r\n                        })\r\n                    }\r\n                }\r\n                console.info('mt-sortable', $this._Sorting);\r\n            }\r\n            if (Filtering){\r\n                $this._Filter = {};\r\n                $this._Filter._DataDefault = $this.Controller._Data.slice(0);\r\n                for (let f in Filtering){\r\n                    if (Filtering.hasOwnProperty(f) && f !== '_format'){\r\n                        $this._Filter[f] = {\r\n                            Target: $this.Select(Filtering[f]),\r\n                            Filter: '',\r\n                        };\r\n                        $this._Filter[f].Target.classList.add('mt-filtering');\r\n                        $this._Filter[f].Target.innerHTML = '<input type=\"text\" class=\"mt-filtering-input\">';\r\n                        $this._Filter[f].Target.querySelector('.mt-filtering-input').addEventListener('keyup', function (e) {\r\n                            //$this._SortBy(f);\r\n                            $this._Filter[f].Filter = e.target.value.toLowerCase();\r\n                            $this._FilterBy();\r\n\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            if (!Lure.ContentList[$this.Type]) //if list is empty, create it, else just add\r\n                Lure.ContentList[$this.Type] = [];\r\n            Lure.ContentList[$this.Type].push(this);\r\n\r\n            //close button\r\n            Array.from(this.Content.children).forEach(function(item){\r\n                if (item.classList.contains(\"close\"))\r\n                    item.onclick = function (e) {\r\n                        $this.Hide(e);\r\n                    }\r\n            });\r\n\r\n            setTimeout(function () {\r\n                AfterBuild.call($this);\r\n            }, 1);\r\n        }\r\n\r\n    }\r\n    get isVisible(){\r\n        return Lure.isVisible(this.Content);\r\n    }\r\n    get Title(){\r\n        return this.TitleContent.innerHTML;\r\n    }\r\n    set Title(t){\r\n        this.TitleContent.innerHTML = t;\r\n    }\r\n    get Data(){\r\n        if (this.Controller)\r\n            return this.Controller.Data;\r\n        return null;\r\n    }\r\n    set Data(data){\r\n        if (this.Controller)\r\n            this.Controller.Data = data;\r\n    }\r\n    get Items(){\r\n        if (this.Controller)\r\n            return this.Controller.Items;\r\n        return null;\r\n    }\r\n    RefreshOne(i){\r\n        if (this.Controller)\r\n            this.Controller.RefreshOne(i);\r\n    }\r\n    Remove(i, removeData){\r\n        if (this.Controller)\r\n            this.Controller.Remove(i, removeData);\r\n    }\r\n    Add(itemData, extraclass = false, isPrepend = false, addData = true){\r\n        if (this.Controller)\r\n            this.Controller.Add(itemData, extraclass, isPrepend, addData);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} itemData\r\n     * @param {int} index\r\n     * @constructor\r\n     */\r\n    Edit(itemData, index){\r\n        if (this.Controller)\r\n            this.Controller.Edit(itemData, index);\r\n    }\r\n    Dispose(){\r\n        this.Content.remove();\r\n        this.Control.Disactive();\r\n        delete this.Controller;\r\n        delete this.Control;\r\n    }\r\n};\r\n\r\nclass MonsieurControl{\r\n    constructor(control, owner){\r\n        if (control === null)\r\n            return;\r\n        if (control.length > 0) //if control list not empty\r\n        {\r\n            let controls = this;\r\n            for (let i = 0; i < control.length; i++)\r\n            {\r\n                if (!control[i].Name)\r\n                    control[i].Name = \"unnamed_\" + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\r\n                controls[control[i].Name] = {\r\n                    Content: Lure.SelectAll(control[i].Target),\r\n                    _Content: control[i].Target,\r\n                    Type: control[i].Type ? control[i].Type : \"Untyped\",\r\n                    isGlobal: control[i].Global,\r\n                    OnClick: control[i].OnClick ? control[i].OnClick : owner.Show,\r\n                    OnChange: control[i].OnChange,\r\n                    Active: function(){\r\n                        Lure.SelectAll(control[i].Target).forEach(function (item) {\r\n                            item.classList.add('active');\r\n                        })\r\n                    },\r\n                    Disactive: function(){\r\n                        Lure.SelectAll(control[i].Target).forEach(function (item) {\r\n                            item.classList.remove('active');\r\n                        });\r\n                    }\r\n\r\n                };\r\n                //onclick\r\n                controls[control[i].Name].Content.forEach(function (item) {\r\n                    item.classList.add('pointer');\r\n                });\r\n                if (control[i].Global){\r\n\r\n                    Lure.AddEventListenerGlobal('click', control[i].Target, function (e) {\r\n                        Lure.SelectAll(control[i].Target).forEach(function (item) {\r\n                            item.classList.remove('active');\r\n                        });\r\n                        e.target.classList.add('active');\r\n                        if (controls[control[i].Name].OnClick)\r\n                            controls[control[i].Name].OnClick.call(owner, e);\r\n                    });\r\n                }\r\n                else{\r\n                    controls[control[i].Name].Content.forEach(function (item) {\r\n                        item.onclick = function (e) {\r\n                            Lure.ContentList[owner.Type].forEach((item) =>\r\n                            {\r\n                                if ((item) !== owner)\r\n                                {\r\n                                    if (item.Control)\r\n                                        item.Control.Disactive();\r\n                                }\r\n                            });\r\n                            //console.log('remover', e);\r\n                            controls[control[i].Name].Content.forEach(function (item) {\r\n                                item.classList.remove('active');\r\n                            });\r\n                            e.currentTarget.classList.add('active');\r\n                            controls[control[i].Name].OnClick.call(owner, e);\r\n                        };\r\n\r\n                    })\r\n                }\r\n\r\n                if (control[i].OnChange)\r\n                {\r\n                    if (control[i].Global){\r\n                        Lure.AddEventListenerGlobal('change', control[i].Target, function (e) {\r\n                            control[i].OnChange.call(owner, e);\r\n                        } )\r\n                    }\r\n                    else{\r\n                        controls[control[i].Name].Content.forEach(function (item) {\r\n                            item.onchange = function (e) {\r\n                                control[i].OnChange.call(owner, e);\r\n                            };\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Active(type = \"Untyped\"){\r\n        for (let k in this)\r\n            if (this[k].Type === type)\r\n                this[k].Content.forEach(function (item) {\r\n                    item.classList.add('active')\r\n                })\r\n    }\r\n    Disactive(type = \"Untyped\"){\r\n        for (let k in this)\r\n            if (this[k].Type === type)\r\n            {\r\n                this[k].Content.forEach(function (item) {\r\n                    item.classList.remove('active');\r\n                });\r\n                if (this[k].isGlobal)\r\n                    Lure.SelectAll(this[k]._Content).forEach(function(item){\r\n                        item.classList.remove('active');\r\n                    })\r\n            }\r\n\r\n    }\r\n}\r\nclass Templator{\r\n    constructor(\r\n        {\r\n            Target = null,                              //{HTMLelement}\r\n            Data = [],                                  // {object}, {array} - if object Templator would be refresh, if array - rebuild\r\n            ListElement = \".list_element\",              //{string} - css selector or dom string\r\n            //ListElementOnClick = null,                //{function} -\r\n            EmptyMessage = \"\",\r\n            EmptyHide = false,      //{bool} - Templator.Content would be hidden if Data.length = 0\r\n            //DataType = \"untyped\",  //--BAD EXPERIENCE-- ODO when refresh one of typed Templator, would be refreshed/added/removed all of same type Templators (exclude untyped ofcourse)\r\n\r\n            PageSize = -1,\r\n            DataCount = -1,         //if > 0 PageGet is requied!!!\r\n            PageGet = null,         //{function} - requied if DataCount > 0\r\n\r\n            ShowAllButton = true,\r\n\r\n            LineSave = function(line, property, newValue, callback=()=>{}){setTimeout(()=>{callback()}, 500)},            // callback would remove editable-waiting css class;\r\n            LineAdd = function(dataObject, callback=()=>{}){setTimeout(()=>{ callback()}, 500)},                     // callback would remove editable-waiting css class;\r\n            EditModeSwitch = null,     //checkbox, which toggle to edit mode\r\n            DataSaveAll = function(){},//TODO\r\n\r\n            //Sortable = false, //sort data columns\r\n\r\n            NoAnimation = false,    //TODO\r\n            NoBuild = false,\r\n\r\n            BeforeBuild = function(){},\r\n            AfterBuild = function(){},\r\n            AfterAdd = function(){},\r\n            Parent = null           //MonsieurContent, which owns this Controller\r\n\r\n        } = {})\r\n    {\r\n        //### DEFINES\r\n        let $this = this;\r\n        this.isController = true;\r\n        if (Parent !== null)\r\n            this.Content = Lure.Select(Target, Parent.Content);\r\n        else\r\n            this.Content = Lure.Select(Target);\r\n        this.Target = this.Content;\r\n        this._Data = Data;\r\n        this.EmptyMessage = EmptyMessage;\r\n        this.ListElement = \"\";\r\n\r\n        this.BeforeBuild = BeforeBuild.bind(this);\r\n        this.AfterBuild = AfterBuild.bind(this);\r\n        this.AfterAdd = AfterAdd.bind(this);\r\n        this.Parent = Parent;\r\n        //paginating\r\n        this.PageSize = PageSize;\r\n        this._PageSize = PageSize;\r\n        this._DataCount = DataCount > 0 ? DataCount : this._Data.length ;\r\n        this._PageCursor = 0;\r\n        this._PageGet = PageGet;\r\n\r\n        //server handling\r\n        this.LineAdd = LineAdd;\r\n        this.LineSave = LineSave;\r\n        this.Type = null; // Refresh or ItemList\r\n\r\n        //settings\r\n        this.isShowAllButton = ShowAllButton;\r\n        this.isNoAnimaton = NoAnimation;\r\n        this.isEmptyHide = EmptyHide;\r\n\r\n        //fields to refresh (for refresh type)\r\n        let Dictionary = [];\r\n        this._Dictionary = Dictionary;\r\n        const Refresher = function () {\r\n            //TODO refresh only changes\r\n            if (!$this._Data)\r\n                $this._Data = {};\r\n            for (let i = 0; i < Dictionary.length; i++)\r\n            {\r\n\r\n                for (let j = 0; j < Dictionary[i].fields.length; j++)\r\n                {\r\n                    let isAttribute = Dictionary[i].fields[j].Target.indexOf('attributes') > -1;\r\n                    let NewValue = Dictionary[i].fields[j].BuildValue($this._Data);\r\n                    if (isAttribute)\r\n                    {\r\n\r\n                        Dictionary[i].obj.attributes[Dictionary[i].fields[j].Target.split(\".\")[1]].value = NewValue;\r\n                    }\r\n                    else {\r\n                        Dictionary[i].obj[Dictionary[i].fields[j].Target] = Dictionary[i].fields[j].BuildValue($this._Data);\r\n                    }\r\n\r\n                }\r\n            }\r\n        };\r\n        this._Rebuilder = function (data = $this._Data) {\r\n            let lines = \"\";\r\n            //$this.Content.style.display = '';\r\n            if ($this._PageCursor === 0 )\r\n                $this.Content.querySelectorAll('.mt-line, .mt-paginator, .mt-empty').forEach(function(item) {item.remove();});\r\n            //pagination check\r\n            let NextCount;\r\n            //let line;\r\n            let Limit = data.length;\r\n            $this._DataCount = DataCount > 0 ? DataCount : Limit ;\r\n            if ($this.PageSize > 0)\r\n            {\r\n                //  debugger;\r\n                $this._DataCount = $this._DataCount > 0 ? $this._DataCount : data.length ;\r\n                let paginator = $this.Content.querySelector('.mt-paginator');\r\n                if (paginator !== null)\r\n                    paginator.remove();\r\n                Limit = parseInt($this._PageCursor) + parseInt($this.PageSize);\r\n                if (Limit > $this._DataCount && $this._DataCount > 0)\r\n                    Limit = $this._DataCount;\r\n                //how much will be load in next step\r\n                NextCount = $this._DataCount - Limit;\r\n                if (NextCount > $this.PageSize)\r\n                    NextCount = $this.PageSize;\r\n            }\r\n            if ($this.Type === \"ItemList\" && data.length === 0 && $this.EmptyMessage !== \"\" && !$this.isEmptyHide)\r\n            {\r\n                let tag = $this.ListElement.match(/\\s?([\\w]+) /)[0].replace(/\\s/g, \"\");\r\n                let empty = document.createElement(tag);\r\n                empty.classList.add('mt-empty');\r\n                empty.innerHTML = $this.EmptyMessage;\r\n                $this.Content.appendChild(empty);\r\n                return;\r\n            }\r\n            else if ($this.Type === \"ItemList\" && data.length === 0 && $this.isEmptyHide){\r\n                $this.Content.style.display = 'none';\r\n                return;\r\n            }\r\n            else if (data.length === 0) {\r\n                return;\r\n            }\r\n            //linebuilding\r\n            for (let i = $this._PageCursor; i < Limit; i++)\r\n                lines += $this._LineBuilder(data[i], i, data.length);\r\n            //appending\r\n            //   debugger;\r\n            if ($this.Content.children.length < 1)\r\n            {\r\n                $this.Content.innerHTML = lines;\r\n            }\r\n            else{\r\n                lines = Lure.CreateElementsFromString(lines, $this.Content.tagName);\r\n                if (lines !== null)\r\n                    lines.forEach(function (item) {\r\n                        $this.Content.appendChild(item);\r\n                    });\r\n            }\r\n            /*{\r\n             lines += $this._LineBuilder(data[i], i, data.length);\r\n             //if should to save changed class list after rebuild\r\n             if (data[i] && data[i].$classlist)\r\n             {\r\n             line = $(line);\r\n             line.attr('class', data[i].$classlist);\r\n             lines +=line[0].outerHTML;\r\n             }\r\n             else{\r\n             lines += line;\r\n             }\r\n             }*/\r\n            //save cursor index\r\n            if ($this.PageSize > 0)\r\n                $this._PageCursor = Limit;\r\n            //PAGINATION BUILD\r\n            //limit data case\r\n            if ($this.PageSize > 0 && $this._PageCursor < $this._DataCount){\r\n                let also;\r\n                let showAll = `<span>  (Не загружено ${($this._DataCount- $this._PageCursor)}) </span>`;\r\n                if ($this.isShowAllButton)\r\n                {\r\n                    showAll = `<span> или </span><span class=\"mt-btn-nextAll dotted pointer\"> Все ( ${($this._DataCount - $this._PageCursor)} )</span>`;\r\n                }\r\n                let isTable = $this.Content.tagName === 'table' || $this.Content.tagName === 'thead' || $this.Content.tagName === 'tbody';\r\n                if (isTable)\r\n                {\r\n                    let colspan = $this.Content.querySelector(\"tr:first-child th\").length + 1;\r\n\r\n                    also = `<tr class=\"mt-paginator\"><td colspan=\"${colspan}\" class=\"element block-head\"><span class=\"tpltr-next dotted pointer\">Показать еще ${NextCount}</span>${showAll}</td></tr>`;\r\n                    also = Lure.CreateElementFromString(also, $this.Content.tagName);\r\n                }\r\n                else {\r\n                    also = Lure.CreateElementFromString(`<div class='mt-paginator'><span class=\"mt-btn-next dotted pointer\">Показать еще ${NextCount}</span>${showAll}</div>`);\r\n\r\n                }\r\n                let btnNext = also.querySelector('.mt-btn-next');\r\n                //console.log('btnNext', btnNext);\r\n                btnNext.onclick = function(){\r\n                    if ($this._PageCursor >= data.length)\r\n                        $this._PageGet($this._PageCursor, $this.PageSize, BuildWithIt);\r\n                    else\r\n                        Build();\r\n\r\n                };\r\n                let btnNextAll = also.querySelector('.mt-btn-nextAll');\r\n                btnNextAll.onclick = function(){\r\n                    $this.PageSize = $this._DataCount;\r\n                    if ($this._PageGet !== null)\r\n                        $this._PageGet($this._PageCursor, ($this._DataCount - $this._PageCursor), BuildWithIt);\r\n                    else\r\n                        Build();\r\n                };\r\n                $this.Content.appendChild(also);\r\n\r\n            }\r\n\r\n        };\r\n        const Build = function () {\r\n            $this.BeforeBuild();\r\n\r\n            if ($this.Type === \"Refresh\")\r\n                Refresher();\r\n            else if ($this.Type === \"ItemList\"/* && $this._Data.length > 0*/)\r\n                $this._Rebuilder();\r\n\r\n\r\n            $this.AfterBuild();\r\n        };\r\n        const BuildWithIt = function (data) {\r\n            for (let i = 0; i < data.length; i++)\r\n                $this._Data.push(data[i]);\r\n            Build();\r\n        };\r\n        // = Rebuild1er;\r\n\r\n        //#### METHODS\r\n        this.FieldAdd = function (element) {\r\n            let elemAttributes = element.attributes;\r\n            let fields = [];\r\n            let WhatFields = -1; // 0-att only, 1-innerHTML only, 2-both\r\n            //find fields in attributes\r\n            for (let i = 0; i < elemAttributes.length; i++)\r\n            {\r\n                if (elemAttributes[i].value.indexOf(\"{{\") > -1)\r\n                {\r\n                    if (elemAttributes[i].name !== 'value')\r\n                        fields.push({\r\n                            Target: 'attributes.'+elemAttributes[i].name,\r\n                            BuildValue: Lure.Compile(elemAttributes[i].value)\r\n                        });\r\n                    else {\r\n                        fields.push({\r\n                            Target: elemAttributes[i].name,\r\n                            BuildValue: Lure.Compile(elemAttributes[i].value)\r\n                        });\r\n                    }\r\n                    WhatFields = 0;\r\n                }\r\n            }\r\n            //innerHTML check\r\n            if (element.childNodes.length < 2)\r\n            {\r\n                if (element.innerHTML.indexOf(\"{{\") > -1)\r\n                {\r\n                    fields.push({\r\n                        Target: \"innerHTML\",\r\n                        BuildValue: Lure.Compile(element.innerHTML)\r\n                    });\r\n                    WhatFields = WhatFields !==0 ? 1:2; //1 if no att, 2 if att exists\r\n\r\n                }\r\n\r\n            }\r\n            if (WhatFields > -1)\r\n            {\r\n                Dictionary.push( {\r\n                    obj: element,\r\n                    fields: fields\r\n                } );\r\n            }\r\n        };\r\n        this.Refresh = function(data = null, index = null){\r\n            $this.PageSize = $this._PageSize;\r\n            $this._PageCursor = 0;\r\n            if (data !== null)\r\n                $this._Data = data;\r\n            $this.PageCursor = 0;\r\n            if (index === null)\r\n                Build();\r\n            else\r\n                $this.RefreshOne(index);\r\n        };\r\n        this.RefreshOne = function (i) {\r\n            let newItem = Lure.CreateElementFromString($this._LineBuilder($this._Data[i], i, $this._Data.length), $this.Content.tagName);\r\n            let itemOld = $this.Items[i];\r\n            $this.Items[i].parentNode.replaceChild(newItem, itemOld);\r\n        };\r\n        this.Add = function(item, extraclass = false, isPrepend = false, addData = true){\r\n            if ($this._Data.length === 0 && $this.Content.querySelector(\".mt-empty\") !== null)\r\n                $this.Content.querySelector(\".mt-empty\").remove();\r\n            let fragment = document.createDocumentFragment();\r\n            let elem = document.createElement($this.Content.tagName);\r\n            let i;\r\n            if (!isPrepend)\r\n            {\r\n                i = $this._Data.length;\r\n                if (!addData)\r\n                    i--;\r\n                elem.innerHTML = $this._LineBuilder(item, i, i+1);\r\n                while (elem.childNodes[0]) {\r\n                    fragment.appendChild(elem.childNodes[0]);\r\n                }\r\n                if (extraclass)\r\n                    fragment.children[0].classList.add(extraclass);\r\n                if (addData)\r\n                    $this._Data.push(item);\r\n                $this.Content.appendChild(fragment);\r\n            }\r\n            else{\r\n                i = 0;\r\n                //change data-line attributes\r\n                $this.Items.forEach(function (item) {\r\n                    console.log(item);\r\n                    console.log(item.dataset['line']);\r\n                    item.dataset['line'] =  parseInt( item.dataset['line'] ) + 1;\r\n                });\r\n                //TODO rendered indexes not changings\r\n\r\n                elem.innerHTML =  $this._LineBuilder(item, 0, $this._Data.length+1);\r\n                while (elem.childNodes[0]) {\r\n                    fragment.appendChild(elem.childNodes[0]);\r\n                }\r\n                if (extraclass)\r\n                    fragment.children[0].classList.add(extraclass);\r\n                if (addData)\r\n                    $this._Data.unshift(item);\r\n                $this.Content.prepend(fragment);\r\n            }\r\n            //server saver\r\n            if ($this.LineAdd !== null)\r\n            {\r\n                $this.LineAdd(item, function () { //remove extraclass callback\r\n                    let x = $this.Content.querySelector('.'+extraclass);\r\n                    if (x)\r\n                        x.classList.remove(extraclass);\r\n                });\r\n            }\r\n            $this.AfterAdd(item, i);\r\n        };\r\n        this.Edit = function (itemData, i){\r\n            console.log('edit itemData', i, itemData);\r\n            Array.from($this.Items).filter(x => parseInt(x.dataset['line'])===i)[0].classList.add('editable-waiting');\r\n            $this.LineSave(i, '$this', itemData,\r\n                function () {\r\n                    $this._Data[i] = itemData;\r\n                    $this.RefreshOne(i);\r\n                });\r\n\r\n        };\r\n        /**\r\n         *\r\n         * @param {int} index\r\n         * @param {bool} removeData\r\n         * @constructor\r\n         */\r\n        this.Remove = function(index, removeData = true){\r\n            //TODO rendered indexes not changings\r\n            $this.Content.querySelector(`.mt-line[data-line=\"${index}\"]`).remove();\r\n            for (let j = index; j < $this.Items.length; j++){\r\n                $this.Items[j].dataset['line'] =  parseInt( $this.Items[j].dataset['line'] ) - 1;\r\n                $this.Items[j].querySelectorAll('[data-line]').forEach(function (item) {\r\n                    item.dataset['line'] = parseInt( item.dataset['line'] ) - 1;\r\n                })\r\n            }\r\n            if (removeData)\r\n                $this._Data.splice(index, 1);\r\n            if ($this._Data.length === 0)\r\n                $this.Refresh();\r\n        };\r\n        this.SwitchToEditMode = function () {\r\n            Lure.Editable.EditMode = true;\r\n            Lure.SelectAll('.editable', $this.Content).forEach(function (item) {\r\n                // console.log(item);\r\n                Lure.Editable.AddEdits(item);\r\n            });\r\n        };\r\n\r\n        //### CONSTRUCTOR\r\n        if ( Array.isArray(this._Data) ){\r\n            this.Type = \"ItemList\";\r\n            const isListElementCssSelector = ListElement.match(/^[a-zA-Z0-9.,\\-_ *#]+$/g) !== null;\r\n            if (isListElementCssSelector){\r\n                let element = this.Content.querySelector(ListElement);\r\n                element.classList.add('mt-line');\r\n                ListElement = element.outerHTML;\r\n                element.remove();\r\n            }\r\n            else{\r\n                let list_element = ListElement.match(/<[^>]+>/)[0];\r\n                let list_elementClassed;\r\n                let pos = list_element.indexOf('class=\"');\r\n                if (pos < 0)\r\n                {\r\n                    list_elementClassed = list_element.substr(0,list_element.length - 1) + ' class=\"mt-line\"' + list_element.substr(list_element.length-1);\r\n                }\r\n                else\r\n                {\r\n                    pos = list_element.indexOf('\"', pos+8);\r\n                    list_elementClassed = list_element.substr(0,pos) + \" mt-line\" + list_element.substr(pos);\r\n                }\r\n                ListElement = ListElement.replace(list_element, list_elementClassed);\r\n            }\r\n            //add data-line attribute\r\n            ListElement = ListElement.replace(/<[\\s\\S]+?(>)/, function (a, b) {\r\n                return a.replace(b, ' data-line=\"{{i}}\">')\r\n            });\r\n            this.ListElement = ListElement;\r\n            this._LineBuilder = Lure.Compile(ListElement, true);\r\n            if (ListElement.match(/<[^>]+class=['\"][\\w\\d\\s-]*(editable)[\\w\\d\\s-]*['\"][^>]*>([^<]*)<[^>]*>/) !== null)\r\n            {\r\n                this.isHasEditable = true;\r\n                if (EditModeSwitch !== null)\r\n                    Lure.Select(EditModeSwitch).addEventListener('change', function (e) {\r\n                        if ( e.currentTarget.checked ){\r\n                            $this.SwitchToEditMode();\r\n                        }\r\n                        else{\r\n                            Lure.Editable.EditMode = false;\r\n                            document.body.click();\r\n                        }\r\n                    });\r\n            }\r\n            this.Content.MonsieurController = this;\r\n            this.Content.classList.add('mt-content');\r\n\r\n        }\r\n        else {\r\n            this.Type = \"Refresh\";\r\n            let AllChildren = Array.prototype.slice.call( this.Content.querySelectorAll('*:not(g):not(path):not(clipPath):not(text):not(br)'));\r\n            AllChildren.push( this.Content);\r\n            AllChildren.forEach(function (item) {\r\n                $this.FieldAdd(item);\r\n            })\r\n        }\r\n        Lure.TemplatorList.push(this);\r\n        if (!NoBuild)\r\n            Build();\r\n    }\r\n    get Data(){\r\n        return this._Data;\r\n    }\r\n    set Data(data){\r\n        this._Data = data;\r\n    }\r\n    get Items(){\r\n        return this.Content.querySelectorAll('.mt-line');\r\n    }\r\n}\r\nclass TreeBuilder{\r\n    constructor(\r\n        {\r\n            Target = null,                          //{string, HTMLElement}\r\n            Data = [],\r\n            ListElement = null,\r\n            Drop = false,                       //{bool}   - horisontal menu with drop down subtrees;\r\n            SubSelector = null,                 //{string} - cssselector of element, where put branches\r\n            SubSelectorHandler = function(){},  //{function} - click handle on SubSelector Element (hide/show branch for exaple)\r\n\r\n            BeforeBuild = function(){},\r\n            AfterBuild = function(){},\r\n\r\n            Parent = null               //MonsieurContent, which owns this Controller\r\n        }\r\n    )\r\n    {\r\n        //### DEFINES\r\n        this.isController = true;\r\n        this.Content = Lure.Select(Target);\r\n        this.Target = this.Content;\r\n        this.Parent = Parent;\r\n        this._Data = Data;\r\n        this.SubSelector = SubSelector;\r\n        this.SubSelectorHandler = SubSelectorHandler.bind(this);\r\n        this.BeforeBuild = BeforeBuild.bind(this);\r\n        this.AfterBuild = AfterBuild.bind(this);\r\n        let SubTreeClass = Drop ? 'mtb-sub_tree dropable':'mtb-sub_tree';\r\n        let Lvl = 0;\r\n        let Branch = ListElement === null ? this.Content.innerHTML : ListElement;\r\n        if (this.SubSelector === null){\r\n            this.SubSelector = '.mtb-sub_tree';\r\n            Branch = Branch.replace(/^([\\s\\S]*)(<\\/\\w+>)$/, function (match, html, entag) {\r\n                entag = `<div class=\"${SubTreeClass}\"></div>${entag}`;\r\n                return html+entag\r\n            })\r\n        }\r\n        this.LineBuilder = Lure.Compile(Branch, true);\r\n        let $this = this;\r\n\r\n        let Index = 0;          //unque serial number of branch\r\n\r\n        let BuildElement = function(obj, key, indexJ) {\r\n            Index++;\r\n            let extra = {\r\n                $lvl: Lvl,\r\n                $key: key,\r\n                $index: Index,\r\n                $j: indexJ\r\n            };\r\n            let line = Lure.CreateElementFromString($this.LineBuilder(obj, Index, null, extra));\r\n            line.classList.add('mtb-branch');\r\n            for (let key in obj)\r\n            {\r\n                let ObjItem = obj[key];\r\n                if (Array.isArray(ObjItem))\r\n                {\r\n                    Lvl++;\r\n                    for (let i = 0; i < ObjItem.length; i++)\r\n                    {\r\n                        if ($this.SubSelector === null)\r\n                        {\r\n                            line.appendChild(  BuildElement(ObjItem[i], key, i) );\r\n                        }\r\n                        else\r\n                        {\r\n                            line.classList.add('mtb-has_tree');\r\n                            if (Drop)\r\n                                line.classList.add('dropable');\r\n                            let sub = line.querySelector($this.SubSelector);\r\n                            sub.appendChild(  BuildElement(ObjItem[i], key, i) );\r\n                        }\r\n                    }\r\n                    Lvl--;\r\n                }\r\n            }\r\n            return line;\r\n        };\r\n        let Build = function () {\r\n            $this.BeforeBuild();\r\n            if (Array.isArray($this._Data))\r\n            {\r\n                $this.Content.innerHTML = '';\r\n                Lvl++;\r\n                for (let j = 0; j < $this._Data.length; j++)\r\n                    $this.Content.appendChild(  BuildElement($this._Data[j], \"root\", 0) );\r\n                Lvl--;\r\n            }\r\n            else{\r\n                $this.Content.appendChild(BuildElement($this._Data, \"root\", 0));\r\n            }\r\n            Lvl = 0;\r\n            Index = 0;\r\n            $this.AfterBuild();\r\n\r\n        };\r\n\r\n        Build(this._Data);\r\n\r\n        //### METHODS\r\n        this.Refresh = function (data=$this._Data) {\r\n            $this._Data = data;\r\n            Build();\r\n        }\r\n\r\n    }\r\n    get Data(){\r\n        return this._Data;\r\n    }\r\n    set Data(data){\r\n        this._Data = data;\r\n    }\r\n}\r\n\r\n//Tutorial\r\n//TargetButton = {string, HTMLElement} - button who start the tutor\r\n//TargetContent = {string, HTMLElement} - select/element where search tutors\r\nclass MonsieurTutor{\r\n    /**\r\n     *\r\n     * @param {HTMLElement} TargetButton\r\n     * @param {HTMLElement} TargetContent\r\n     */\r\n    constructor(TargetButton = null, TargetContent = null){\r\n        //### DEFINES\r\n        let $this = this;\r\n        this.TargetButton = Lure.Select(TargetButton);\r\n        this.TargetContent = Lure.Select(TargetContent);\r\n        const MT = `<div class=\"monsieur-tutor\">\r\n                        <div class=\"cd-caption\">\r\n                            <span>Шаг </span>\r\n                            <span class=\"monsieur-tutor_step\"></span>\r\n                        </div>\r\n                        <div class=\"monsieur-tutor_desc\"></div>\r\n                        <div class=\"monsieur-tutor_btns\">\r\n                            <button class=\"button btn-tutor btn-tutor-stop\">Прервать обучение</button>\r\n                            <button class=\"button btn-tutor btn-tutor-next\">Далeе →</button></div>\r\n                   </div>`;\r\n        this.Content = Lure.CreateElementFromString(MT);\r\n        this.ContentBG = Lure.CreateElementFromString('<div class=\"monsieur-tutor-bg dialog-wrapper\"></div>');\r\n        this.Content.style.display = 'none';\r\n        this.ContentBG.style.display = 'none';\r\n        this._Description = this.Content.querySelector('.monsieur-tutor_desc');\r\n        this._Step = this.Content.querySelector('.monsieur-tutor_step');\r\n        this._ButtonNext = this.Content.querySelector('.btn-tutor-next');\r\n        this._ButtonStop = this.Content.querySelector('.btn-tutor-stop');\r\n\r\n        $this.Data = [];\r\n        const ButtonNextText = this._ButtonNext.innerHTML;\r\n        let TutorPosition = 0;\r\n        /*get transparent*/\r\n        let temp = document.createElement('div');\r\n        temp.style.display = 'none';\r\n        document.body.appendChild(temp);\r\n        const ColorTransparent = window.getComputedStyle(temp).backgroundColor;\r\n        temp.remove();\r\n        //---\r\n        const ElemCssRestore = function () {\r\n            let Element = $this.Data[TutorPosition-1].obj;\r\n            if (Element.tagName.toLowerCase() !== 'tr')\r\n            {\r\n                Element.style.zIndex = '';\r\n                Element.style.position = '';\r\n                Element.style.outline = '';\r\n                Element.style.display = '';\r\n                Element.style.backgroundColor = '';\r\n                return;\r\n            }\r\n            let nElements = Element.querySelectorAll('th, td');\r\n            nElements.forEach(function (elem) {\r\n                elem.style.position = '';\r\n                elem.style.zIndex = '';\r\n            });\r\n        };\r\n        const ElemCssSet = function (Element) {\r\n            if (Element.tagName.toLowerCase() !== 'tr')\r\n            {\r\n                Element.style.zIndex = '11';\r\n                Element.style.position = 'relative';\r\n                Element.style.outline = '5px #bee0ff solid';\r\n                let style = window.getComputedStyle(Element);\r\n                if (style.backgroundColor === ColorTransparent)\r\n                    Element.style.backgroundColor = \"#fff\";\r\n                if (!Lure.isVisible(Element) )\r\n                {\r\n                    if (Element.tagName.toLowerCase() !== \"table\" )\r\n                        Element.style.display = 'block';\r\n                    else\r\n                        Element.style.display = 'table';\r\n                }\r\n                /* if (Element.length > 1)\r\n                 Element.eq(1).css({zIndex: '', outline: ''});*/\r\n                return;\r\n            }\r\n            let nElements = Element.querySelectorAll('th, td');\r\n            nElements.forEach(function (elem) {\r\n                elem.style.zIndex = \"11\";\r\n                elem.style.position = \"relative\";\r\n                let style = window.getComputedStyle(elem);\r\n                if (style.backgroundColor === ColorTransparent){\r\n                    elem.style.backgroundColor = \"#fff\";\r\n                }\r\n            });\r\n            /* if (Element.length > 1)\r\n             Element.eq(1).css({zIndex: '', outline: ''});*/\r\n        };\r\n        const Run = function () {\r\n            console.log(\"tutor run\");\r\n            if ($this.TargetContent === null)\r\n                return;\r\n            let Items = $this.TargetContent.querySelectorAll('*[data-tutor]:not([data-line]), *[data-tutor][data-line=\"0\"]');\r\n            if (Items.length < 1){\r\n                Lure.Confirm(\"Сообщение\", \"На этом экране нет подсказок\");\r\n                return;\r\n            }\r\n            // document.body.style.position = 'relative';\r\n\r\n            Items.forEach(function (item) {\r\n                $this.Data.push({\r\n                    obj: item,\r\n                    desc: item.dataset['tutor']\r\n                })\r\n            });\r\n            $this.Content.style.display = '';\r\n            $this.ContentBG.style.display = '';\r\n            GoStep();\r\n        };\r\n        const GoStep = function () {\r\n            //restore prev element's css\r\n            if (TutorPosition > 0)\r\n                ElemCssRestore();\r\n            if (TutorPosition === $this.Data.length)\r\n            {\r\n                Stop();\r\n                return;\r\n            }\r\n            //select next elem\r\n            let Element = $this.Data[TutorPosition].obj;\r\n            let ElementDesc = $this.Data[TutorPosition].desc;\r\n            // check for invisible parent\r\n            let ElemParent = ElementDesc.match(/{([\\s\\S]+)}/);\r\n            if (ElemParent !== null)\r\n            {\r\n                ElemParent = ElemParent[1];\r\n                ElementDesc = ElementDesc.replace(/{([\\s\\S]+)}/, '');\r\n                Element = Element.closest(ElemParent);\r\n                $this.Data[TutorPosition].obj = Element;\r\n                //Element.push( );\r\n            }\r\n            //set element visible\r\n            ElemCssSet(Element);\r\n            //write new element title and desc\r\n            $this._Step.innerHTML = (TutorPosition+1) + \"/\"+$this.Data.length;\r\n            $this._Description.innerHTML = ElementDesc;\r\n            //caption next button\r\n            if ((TutorPosition+1) === $this.Data.length)\r\n            {\r\n                $this._ButtonNext.innerHTML = 'Завершить';\r\n                $this._ButtonStop.style.opacity = '0';\r\n            }\r\n\r\n            //move tutor desc box\r\n            let posX = Element.offsetLeft + Element.clientWidth + 10;\r\n            let posY = Element.offsetTop - $this.Content.clientHeight - 10;\r\n            if (posY < 10)\r\n                posY = 10;\r\n            if ( (posX + $this.Content.clientWidth) > window.innerWidth )\r\n            {\r\n                posX = Element.offsetLeft - $this.Content.clientWidth - 10;\r\n                if (window.innerWidth < $this.Content.clientWidth + Element.clientWidth)\r\n                {\r\n                    posX = Element.offsetLeft + Element.clientWidth - $this.Content.clientWidth - 20;\r\n                }\r\n\r\n            }\r\n            if (document.documentElement.scrollTop  > posY || document.documentElement.scrollTop + window.innerHeight < Element.offsetTop + Element.offsetHeight)\r\n            {\r\n                //$('html, body').animate({scrollTop: posY - 10}, 300);\r\n                document.documentElement.scrollTop =  (posY - 10)  +'px';\r\n            }\r\n            if (posX < 10)\r\n                posX = 10;\r\n            $this.Content.style.left = posX +'px';\r\n            $this.Content.style.top = posY +'px';\r\n\r\n            TutorPosition++;\r\n        };\r\n        const Stop = function () {\r\n            //     document.body.style.position = '';\r\n            ElemCssRestore();\r\n            $this.Content.style.display = 'none';\r\n            $this.ContentBG.style.display = 'none';\r\n            $this._ButtonNext.innerHTML = ButtonNextText;\r\n            $this._ButtonStop.style.opacity = '';\r\n            TutorPosition = 0;\r\n            $this.Data = [];\r\n        };\r\n        //### CONSTRUCT\r\n\r\n        this.TargetButton.onclick = Run;\r\n        this._ButtonNext.onclick = GoStep;\r\n        this._ButtonStop.onclick = Stop;\r\n\r\n        document.body.appendChild(this.Content);\r\n        document.body.appendChild(this.ContentBG);\r\n\r\n        //### METHODS\r\n        this.Run = Run;\r\n\r\n    }\r\n}\r\nclass MonsieurLoading{\r\n    constructor(\r\n        {\r\n            Target = 'body'\r\n        } = {}\r\n    ){\r\n        this.Target = Lure.Select(Target);\r\n        this.Target.style.position = 'relative';\r\n        this.Content = Lure.CreateElementFromString(`<div class=\"ajax-loading\" style=\"display: none\"></div>`);\r\n        let cx = 60; //diameter\r\n        let cy = 60;\r\n        let _DoArc = function(radius, maxAngle){\r\n            let d = \" M \"+ (cx + radius) + \" \" + cy;\r\n            for (let angle = 0; angle < maxAngle; angle++)\r\n            {\r\n                let rad = angle * (Math.PI / 180);  //deg to rad\r\n                let x = cx + Math.cos(rad) * radius;\r\n                let y = cy + Math.sin(rad) * radius;\r\n                d += \" L \"+x + \" \" + y;\r\n            }\r\n            return d;\r\n        };\r\n        let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\">\r\n                     <path d=\"${_DoArc(45, 160)}\" class=\"monsieur-arc1\" fill=\"none\" stroke=\"#449b22\" stroke-width=\"5\"></path>\r\n                     <path d=\"${_DoArc(40, 130)}\" class=\"monsieur-arc2\" fill=\"none\" stroke=\"#61c8de\" stroke-width=\"5\"></path>\r\n                     <path d=\"${_DoArc(35, 100)}\" class=\"monsieur-arc3\" fill=\"none\" stroke=\"#761c19\" stroke-width=\"5\"></path>\r\n                     <path d=\"${_DoArc(30, 70)}\"  class=\"monsieur-arc4\" fill=\"none\" stroke=\"#333333\" stroke-width=\"5\"></path>\r\n                   </svg>`;\r\n        this.Target.appendChild(this.Content);\r\n        this.Content.innerHTML = svg;\r\n        this.Timeout = null;\r\n    }\r\n    Show(){\r\n        let $this = this;\r\n        this.Content.style.display = '';\r\n        clearTimeout(this.TimeoutHide);\r\n        this.Timeout = setTimeout(function(){\r\n            $this.Content.style.display = 'block';\r\n        }, 70);\r\n    }\r\n    Hide(){\r\n        let $this = this;\r\n        clearTimeout(this.Timeout);\r\n        this.TimeoutHide = setTimeout(function(){\r\n            $this.Content.style.display = 'none';\r\n        }, 250); //hide may be called in same time as the show()\r\n    }\r\n}\r\nclass MonsieurTooltip{\r\n    constructor({\r\n                    Target    = document,           //Target-listener (global document by default)\r\n                    Attribute = \"data-tooltip\",     // data-tooltip=\"Help text here\"\r\n                    Delay     = 400,                //delay before tooltip show\r\n                    Time      = 1100,               //showing time\r\n                    Cursor    = \"help\",             //item:hover cursor\r\n                    Custom    = `<div class=\"monsieur-tooltip\">`,               //custom html of tooltip\r\n                    AfterBuild = function(){}\r\n\r\n                })\r\n    {\r\n        let $this = this;\r\n        this.ToolTip = Lure.CreateElementFromString(Custom);\r\n        let Timer = null;\r\n        let Destr = null;\r\n        this.Target = Lure.Select(Target);\r\n        const Show = function (text){\r\n            this.ToolTip.innerHTML = text;\r\n            $this.Target.appendChild(this.ToolTip);\r\n\r\n        }.bind(this);\r\n        Lure.AddEventListenerGlobal('mouseover', `[${Attribute}]`, function (e) {\r\n            let text = e.currentTarget.dataset[Attribute.replace('data-', '')];\r\n            clearTimeout(Destr);\r\n            Timer = setTimeout(function(){\r\n                Show(text);\r\n            }, Delay);\r\n        }, this.Target);\r\n        Lure.AddEventListenerGlobal('mouseout', `[${Attribute}]`, function (e) {\r\n            clearTimeout(Timer);\r\n            Destr = setTimeout(function () {\r\n                //$this.ToolTip.remove();\r\n            }, Time)\r\n        }, this.Target);\r\n        setTimeout(function () {\r\n            AfterBuild.bind($this);\r\n        }, 0)\r\n    }\r\n\r\n}\r\n\r\n//Lure.Content = MonsieurContent;\r\n\r\n"]}